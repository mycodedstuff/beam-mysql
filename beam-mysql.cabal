cabal-version: 3.0
name:          beam-mysql
version:       1.3.0.4
synopsis:      Connection layer between beam and MySQL/MariaDB
description:
  Beam driver for MySQL or MariaDB databases, two popular open-source databases.
  Supports most beam features, but does not yet have support for "beam-migrate".

homepage:      https://github.com/juspay/beam-mysql
bug-reports:   https://github.com/juspay/beam-mysql/issues
license:       MIT
license-file:  LICENSE
author:        Travis Athougies, Juspay Technologies Pvt Ltd
maintainer:    koz.ross@retro-freedom.nz
copyright:
  (C) Travis Authologies 2018 (C) Juspay Technologies Pvt Ltd 2020-21

category:      Database
build-type:    Simple
tested-with:   GHC ==8.8.4

source-repository head
  type:     git
  location: https://github.com/juspay/beam-mysql

-- Common sections

common common-lang
  ghc-options:
    -Wall -Wcompat -Wincomplete-record-updates
    -Wincomplete-uni-patterns -Wredundant-constraints -Werror
    -fplugin=RecordDotPreprocessor
  if impl(ghc > 8.10.7)
    ghc-options: -Wwarn=ambiguous-fields

  build-depends:
    , base                     <5
    , beam-core
    , generics-sop
    , mysql-haskell
    , record-dot-preprocessor
    , record-hasfield
    , safe-exceptions
    , text
    , unordered-containers

  default-extensions:
    DataKinds
    DeriveFunctor
    DeriveGeneric
    DerivingStrategies
    DuplicateRecordFields
    EmptyCase
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    InstanceSigs
    LambdaCase
    MultiParamTypeClasses
    OverloadedStrings
    TupleSections
    TypeApplications
    TypeFamilies
    TypeSynonymInstances
    UndecidableInstances

  default-language:   Haskell2010

common common-test
  import:        common-lang
  ghc-options:   -threaded -O2 -with-rtsopts=-N
  build-depends:
    , beam-mysql
    , db
    , tasty

-- Flags

flag lenient
  description: Be lenient when decoding (see LENIENT.md for description).
  default:     False

flag with-db
  description: Also build and run tests that require a running test DB.
  default:     False

-- Libraries

library
  import:          common-lang

  if flag(lenient)
    exposed-modules:
      Database.Beam.MySQL
      Data.FakeUTC
      Data.ViaJson
      Database.Beam.MySQL.Connection
      Database.Beam.MySQL.Extra
      Database.Beam.MySQL.FromField.DecodeError
      Database.Beam.MySQL.FromField.Lenient
      Database.Beam.MySQL.FromField.Strict
      Database.Beam.MySQL.Syntax
      Database.Beam.MySQL.Syntax.DataType
      Database.Beam.MySQL.Syntax.Delete
      Database.Beam.MySQL.Syntax.Insert
      Database.Beam.MySQL.Syntax.Misc
      Database.Beam.MySQL.Syntax.Render
      Database.Beam.MySQL.Syntax.Select
      Database.Beam.MySQL.Syntax.Update
      Database.Beam.MySQL.Syntax.Value
      Database.Beam.MySQL.TextHandling
      Database.Beam.MySQL.Utils

  else
    exposed-modules:
      Database.Beam.MySQL
    other-modules:
      Data.FakeUTC
      Data.ViaJson
      Database.Beam.MySQL.Connection
      Database.Beam.MySQL.Extra
      Database.Beam.MySQL.FromField.DecodeError
      Database.Beam.MySQL.FromField.Strict
      Database.Beam.MySQL.Syntax
      Database.Beam.MySQL.Syntax.DataType
      Database.Beam.MySQL.Syntax.Delete
      Database.Beam.MySQL.Syntax.Insert
      Database.Beam.MySQL.Syntax.Misc
      Database.Beam.MySQL.Syntax.Render
      Database.Beam.MySQL.Syntax.Select
      Database.Beam.MySQL.Syntax.Update
      Database.Beam.MySQL.Syntax.Value
      Database.Beam.MySQL.TextHandling
      Database.Beam.MySQL.Utils

  build-depends:
    , aeson
    , binary
    , bytestring
    , fmt
    , free
    , hashable > 1.3
    , int-cast
    , io-streams
    , mason
    , mtl
    , mysql-haskell
    , safe-exceptions
    , scientific
    , text
    , time
    , vector

  if flag(lenient)
    cpp-options: -DLENIENT

  hs-source-dirs:  src

library db
  import:          common-lang
  visibility:      private
  exposed-modules:
    DB
    DB.BadSchema
    DB.BadSchemaBig
    DB.BadSchemaNullable
    DB.Bobby
    DB.AltParser
    DB.Latin1
    DB.Lenient
    DB.Nullable
    DB.NullableMaybe
    DB.PrimaryKey.AutoInc
    DB.PrimaryKey.NoAutoInc
    DB.PrimaryKey.None
    DB.Unicode
    DB.ViaJSON

  build-depends:
    , aeson
    , beam-mysql
    , vector

  hs-source-dirs:  db

  if !flag(with-db)
    buildable: False

library pool
  import:          common-lang
  visibility:      private
  exposed-modules: Pool
  build-depends:
    , BoundedChan
    , lifted-base
    , monad-control
    , transformers-base

  hs-source-dirs:  pool

  if !flag(with-db)
    buildable: False

-- Test suites

test-suite generation
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , aeson
    , tasty-hunit

  hs-source-dirs: test/generation

  if !flag(with-db)
    buildable: False

test-suite nullable
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , pool
    , safe-exceptions
    , tasty-hunit

  hs-source-dirs: test/nullable

  if !flag(with-db)
    buildable: False

test-suite via-json
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , aeson
    , hedgehog
    , lifted-base
    , pool
    , scientific
    , tasty-hedgehog
    , vector

  hs-source-dirs: test/via-json

  if !flag(with-db)
    buildable: False

test-suite bobby-tables
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , pool
    , tasty-hunit

  hs-source-dirs: test/bobby-tables

  if !flag(with-db)
    buildable: False

test-suite unicode
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , fmt
    , split
    , tasty-hunit

  hs-source-dirs: test/unicode

  if !flag(with-db)
    buildable: False

test-suite run-insert-returning
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , hedgehog
    , lifted-base
    , pool
    , tasty-hedgehog
    , tasty-hunit

  hs-source-dirs: test/run-insert-returning

  if !flag(with-db)
    buildable: False

test-suite latin1
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , bytestring
    , tasty-hunit

  hs-source-dirs: test/latin1

  if !flag(with-db)
    buildable: False

test-suite bad-schemata
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , pool
    , tasty-hunit

  hs-source-dirs: test/bad-schemata

  if (flag(lenient) || !flag(with-db))
    buildable: False

test-suite leniency
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , ieee754
    , tasty-hunit
    , vector

  hs-source-dirs: test/leniency

  if (!flag(lenient) || !flag(with-db))
    buildable: False

test-suite alt-parser
  import:         common-test
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , pool
    , safe-exceptions
    , tasty-hunit

  hs-source-dirs: test/alt-parser

  if !flag(with-db)
    buildable: False
